pragma solidity 0.5.0;
contract shop{
    address payable owner;
    struct ProductInfo{
        string name;
        uint name;
        uint time;
    }
    struct List{
        string productName;
        uint amount;
        uint buyTime;
    }
    modifier onlyOwner{
        require(msg.sender == owner,"You are not owner");
        _;
    }
    modifier isMember{
        require(isRegister[msg.sender] == true);
        _;
    }
    mapping (address => bool) public isRegister;
    mapping (address => mapping (uint => List) ) public buyList;
    mapping (uint => ProductInfo) public product;
    
    constructor()public{
        owner = msg.sender;
    }
    function register() public{
        require(isRegister[msg.sender] == false);
        isRegister[msg.sender] = true;
    }
    
}
